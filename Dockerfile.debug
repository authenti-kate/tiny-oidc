ARG PYTHONVER=3.12
ARG DISTROBASE=bookworm
FROM ghcr.io/astral-sh/uv:python${PYTHONVER}-${DISTROBASE}-slim AS builder
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy
WORKDIR /app
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev
ADD . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Then, use a final image without uv
FROM python:${PYTHONVER}-slim-${DISTROBASE}
# It is important to use the image that matches the builder, as the path to the
# Python executable must be the same, e.g., using `python:3.11-slim-bookworm`
# will fail.

RUN apt-get update && apt-get install -y curl

# Copy the application from the builder
COPY --from=builder --chown=app:app /app /app

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Run the FastAPI application by default
#CMD ["python3", "/app/app.py"]
HEALTHCHECK --interval=5s --start-period=5s CMD [ "curl", "-f", "http://localhost:8000/health" ]

# Extra steps for debugging
RUN pip install debugpy -t /tmp

WORKDIR /app
CMD ["python3", "/tmp/debugpy", "--wait-for-client", "--listen", "0.0.0.0:5678", "app.py"]